<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorial Island</title><link>https://tutorial-island.github.io/</link><description>Recent content on Tutorial Island</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 31 Mar 2025 21:19:52 -0300</lastBuildDate><atom:link href="https://tutorial-island.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>My First Post</title><link>https://tutorial-island.github.io/posts/my-first-post/</link><pubDate>Mon, 31 Mar 2025 21:19:52 -0300</pubDate><guid>https://tutorial-island.github.io/posts/my-first-post/</guid><description/></item><item><title>Mastering Array Chunking in JavaScript</title><link>https://tutorial-island.github.io/posts/article-20250402221301/</link><pubDate>Sun, 27 Oct 2024 00:00:00 +0000</pubDate><guid>https://tutorial-island.github.io/posts/article-20250402221301/</guid><description>&lt;h1 id="mastering-array-chunking-in-javascript">Mastering Array Chunking in JavaScript&lt;/h1>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Today, we&amp;rsquo;re tackling a common JavaScript task: array chunking. Imagine you&amp;rsquo;re building a website that displays a large number of images. Instead of loading all the images at once, which can slow down the page, you want to load them in smaller batches, or &amp;ldquo;chunks.&amp;rdquo; This approach, called lazy loading or pagination, enhances the user experience. We&amp;rsquo;ll write a function that takes an array and a chunk size as input, and returns a new array containing smaller arrays (chunks) of the specified size.&lt;/p></description></item><item><title>Haskell - Implementing a Simple Caesar Cipher</title><link>https://tutorial-island.github.io/posts/article-20250403211404/</link><pubDate>Wed, 24 Jan 2024 00:00:00 +0000</pubDate><guid>https://tutorial-island.github.io/posts/article-20250403211404/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Today, we&amp;rsquo;re going to implement a classic cryptographic algorithm: the Caesar cipher. This cipher shifts each letter in a message by a fixed number of positions down the alphabet. While not secure, it provides a great way to learn about character manipulation and basic functional programming concepts in Haskell. We&amp;rsquo;ll take a plain text message and encrypt it using a key (the shift value), and also be able to decrypt back to the original message.&lt;/p></description></item><item><title>Building a Simple Word Counter in Go</title><link>https://tutorial-island.github.io/posts/article-20250402025939/</link><pubDate>Fri, 27 Oct 2023 00:00:00 +0000</pubDate><guid>https://tutorial-island.github.io/posts/article-20250402025939/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Today, we&amp;rsquo;re going to implement a simple word counter in Go. The program will take a string as input and return a map containing each unique word in the string and the number of times it appears. This is a common task in text analysis and data processing.&lt;/p>
&lt;h2 id="explanation">Explanation&lt;/h2>
&lt;p>The challenge here is to efficiently parse the input string, identify individual words, and keep track of their counts. We&amp;rsquo;ll need to handle:&lt;/p></description></item><item><title/><link>https://tutorial-island.github.io/posts/article-20250402024643/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tutorial-island.github.io/posts/article-20250402024643/</guid><description>&lt;p>Okay, I&amp;rsquo;m ready. How can I help you today? Please tell me what you&amp;rsquo;d like to do. For example, are you looking for:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Information on a specific topic?&lt;/strong> (e.g., &amp;ldquo;What are the symptoms of the flu?&amp;rdquo;)&lt;/li>
&lt;li>&lt;strong>Creative writing?&lt;/strong> (e.g., &amp;ldquo;Write a short poem about autumn.&amp;rdquo;)&lt;/li>
&lt;li>&lt;strong>Help with a task?&lt;/strong> (e.g., &amp;ldquo;Can you summarize this article for me?&amp;rdquo;)&lt;/li>
&lt;li>&lt;strong>Code generation?&lt;/strong> (e.g., &amp;ldquo;Write a Python function to calculate the Fibonacci sequence.&amp;rdquo;)&lt;/li>
&lt;li>&lt;strong>Translation?&lt;/strong> (e.g., &amp;ldquo;Translate &amp;lsquo;hello&amp;rsquo; into Spanish.&amp;rdquo;)&lt;/li>
&lt;li>&lt;strong>Something else entirely?&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>The more details you provide, the better I can assist you.&lt;/p></description></item></channel></rss>