<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TypeScript on Tutorial Island</title><link>https://tutorial-island.github.io/tags/typescript/</link><description>Recent content in TypeScript on Tutorial Island</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 27 Oct 2023 10:00:00 -0700</lastBuildDate><atom:link href="https://tutorial-island.github.io/tags/typescript/index.xml" rel="self" type="application/rss+xml"/><item><title>Implementing a Simple Stack in TypeScript</title><link>https://tutorial-island.github.io/posts/article-20250415012045/</link><pubDate>Fri, 27 Oct 2023 10:00:00 -0700</pubDate><guid>https://tutorial-island.github.io/posts/article-20250415012045/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Today we are going to implement a simple stack data structure in TypeScript. A stack is a fundamental data structure that follows the Last-In, First-Out (LIFO) principle. Imagine a stack of plates; you can only add or remove plates from the top. This tutorial will guide you through the process of creating a stack with essential functionalities like adding elements (push), removing elements (pop), and viewing the top element (peek).&lt;/p></description></item><item><title>TypeScript Generics: Building a Reusable Data Mapper</title><link>https://tutorial-island.github.io/posts/article-20250410011803/</link><pubDate>Fri, 27 Oct 2023 00:00:00 +0000</pubDate><guid>https://tutorial-island.github.io/posts/article-20250410011803/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Today, we&amp;rsquo;re going to build a reusable data mapper using TypeScript generics. Imagine you have different data structures coming from various APIs or databases, and you need to transform them into a unified, consistent format for your application. Writing a specific mapper for each data structure would be tedious and error-prone. Generics will allow us to create a flexible mapper that can handle various data types while maintaining type safety.&lt;/p></description></item></channel></rss>