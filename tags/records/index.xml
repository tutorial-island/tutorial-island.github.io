<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Records on Tutorial Island</title><link>https://tutorial-island.github.io/tags/records/</link><description>Recent content in Records on Tutorial Island</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 27 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://tutorial-island.github.io/tags/records/index.xml" rel="self" type="application/rss+xml"/><item><title>Working with Records in Haskell: Building a Simple Product Catalog</title><link>https://tutorial-island.github.io/posts/article-20250409011813/</link><pubDate>Fri, 27 Oct 2023 00:00:00 +0000</pubDate><guid>https://tutorial-island.github.io/posts/article-20250409011813/</guid><description>&lt;h1 id="working-with-records-in-haskell-building-a-simple-product-catalog">Working with Records in Haskell: Building a Simple Product Catalog&lt;/h1>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Today, we&amp;rsquo;re going to dive into Haskell records by building a simple product catalog. Imagine you&amp;rsquo;re building an e-commerce site. You need a way to represent products, each with a name, price, and a stock quantity. Haskell&amp;rsquo;s record syntax provides a clean and structured way to do this. We&amp;rsquo;ll walk through how to define, create, and manipulate records to manage our product information.&lt;/p></description></item></channel></rss>